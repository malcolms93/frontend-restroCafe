{"ast":null,"code":"import API from \"../../API\";\nimport { addCartAction, increaseCartAction, decreaseCartAction, fetchCartAction } from \"./actions\";\nconst api = new API();\nconst CARTS_KEY = \"CARTS_KEY\";\nexport const fetchFromLocalStorage = () => {\n  return async dispatch => {\n    let cartsJSON = localStorage.getItem(CARTS_KEY);\n    let carts = {};\n    if (cartsJSON) {\n      carts = JSON.parse(cartsJSON);\n    }\n    const subtotal = calculateSubtotal(carts);\n    dispatch(fetchCartAction(carts, subtotal));\n  };\n};\nexport const addCart = item => {\n  return async (dispatch, getState) => {\n    let prevCarts = getState().carts.list;\n    prevCarts[item.id] = {\n      item: item,\n      selected_count: 1\n    };\n    const subtotal = calculateSubtotal(prevCarts);\n    setToLocalStorage(prevCarts);\n    dispatch(addCartAction(prevCarts, subtotal));\n  };\n};\nexport const increaseCart = item => {\n  return async (dispatch, getState) => {\n    let prevCarts = getState().carts.list;\n    let nextSelectedCount = prevCarts[item.id].selected_count + 1;\n    prevCarts[item.id] = {\n      \"item\": item,\n      \"selected_count\": nextSelectedCount\n    };\n    const subtotal = calculateSubtotal(prevCarts);\n    setToLocalStorage(prevCarts);\n    dispatch(increaseCartAction(prevCarts, subtotal));\n  };\n};\nexport const decreaseCart = item => {\n  return async (dispatch, getState) => {\n    let prevCarts = getState().carts.list;\n    let nextSelectedCount = prevCarts[item.id].selected_count - 1;\n    if (nextSelectedCount > 0) {\n      prevCarts[item.id] = {\n        \"item\": item,\n        \"selected_count\": nextSelectedCount\n      };\n    } else {\n      delete prevCarts[item.id];\n    }\n    const subtotal = calculateSubtotal(prevCarts);\n    setToLocalStorage(prevCarts);\n    dispatch(decreaseCartAction(prevCarts, subtotal));\n  };\n};\nconst setToLocalStorage = carts => {\n  localStorage.setItem(CARTS_KEY, JSON.stringify(carts));\n};\nconst calculateSubtotal = carts => {\n  let subtotal = 0;\n  console.log(carts);\n  for (let key in carts) {\n    subtotal += Number(carts[key].item.price) * carts[key].selected_count;\n  }\n  return subtotal;\n};","map":{"version":3,"names":["API","addCartAction","increaseCartAction","decreaseCartAction","fetchCartAction","api","CARTS_KEY","fetchFromLocalStorage","dispatch","cartsJSON","localStorage","getItem","carts","JSON","parse","subtotal","calculateSubtotal","addCart","item","getState","prevCarts","list","id","selected_count","setToLocalStorage","increaseCart","nextSelectedCount","decreaseCart","setItem","stringify","console","log","key","Number","price"],"sources":["/Users/musubimanagement/Downloads/RestroCafeapp-main/frontend/src/reducks/carts/operations.js"],"sourcesContent":["import API from \"../../API\"\nimport {addCartAction, increaseCartAction, decreaseCartAction, fetchCartAction} from \"./actions\";\n\nconst api = new API();\nconst CARTS_KEY = \"CARTS_KEY\";\n\nexport const fetchFromLocalStorage = () => {\n    return async (dispatch) => {\n        let cartsJSON = localStorage.getItem(CARTS_KEY);\n        let carts = {};\n        if (cartsJSON) {\n            carts = JSON.parse(cartsJSON);\n        }\n        const subtotal = calculateSubtotal(carts);\n        dispatch(fetchCartAction(carts, subtotal));\n    }\n}\n\nexport const addCart = (item) => {\n    return async (dispatch, getState) => {\n        let prevCarts = getState().carts.list\n        prevCarts[item.id] = {item: item, selected_count: 1};\n        const subtotal = calculateSubtotal(prevCarts);\n        setToLocalStorage(prevCarts);\n        dispatch(addCartAction(prevCarts, subtotal));\n   }\n}\nexport const increaseCart = (item) => {\n    return async (dispatch, getState) => {\n        let prevCarts = getState().carts.list\n        let nextSelectedCount = prevCarts[item.id].selected_count + 1;\n        prevCarts[item.id] = {\"item\": item, \"selected_count\": nextSelectedCount};\n        const subtotal = calculateSubtotal(prevCarts);\n        setToLocalStorage(prevCarts);\n        dispatch(increaseCartAction(prevCarts, subtotal))\n   }\n}\n\nexport const decreaseCart = (item) => {\n    return async (dispatch, getState) => {\n        let prevCarts = getState().carts.list\n        let nextSelectedCount = prevCarts[item.id].selected_count - 1;\n        if (nextSelectedCount > 0) {\n            prevCarts[item.id] = {\"item\": item, \"selected_count\": nextSelectedCount};\n        } else {\n            delete prevCarts[item.id];\n        }\n        const subtotal = calculateSubtotal(prevCarts);\n        setToLocalStorage(prevCarts);\n        dispatch(decreaseCartAction(prevCarts, subtotal))\n   }\n}\n\nconst setToLocalStorage = (carts) => {\n    localStorage.setItem(CARTS_KEY, JSON.stringify(carts));\n}\n\nconst calculateSubtotal = (carts) => {\n    let subtotal = 0;\n    console.log(carts);\n    for (let key in carts) {\n        subtotal += (Number(carts[key].item.price) * carts[key].selected_count);\n    }\n   return subtotal;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}